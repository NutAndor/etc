
- Check if my fork NutAndor:master is actual comparing to zukero:master
	https://github.com/NutAndor/andors-trail/compare/master...Zukero:master

- Create branch NutAndor:beta

- Create an ATCS project based on the git source code
	Create new directory:  C:\AT\ATCS\beta\ATCS
	Open ATCS: Workspace:  C:\AT\ATCS\beta\ATCS
	New ATCS project:  beta  	on AT source:  C:\AT\NutAndor\andors-trail\AndorsTrail

- Actualize PO files
	Use ATCS' beanshell console to update the .po and .pot files (in assets/translation/) using the new list of translatable text extracted from the JSON and worldmap data. See the PotComparator class comment in ATCS source code.
	This involves some decision making in case the english text for a given resource changed. "Typo" means the existing translations must be preserved. "Review" means the existing translations must be preserved, but prefixed with "[REVIEW]" (tag removed, and translation used in-game) to alert the translators that they may need to revise their translation to reflect the english changes. "Outdated" means the existing translations aren't valid anymore. They will be prefixed with "[OUTDATED]" (translation NOT used in-game) to alert the translators that they must change their translation, yet we do not delete the previous translation completely from weblate (it could be a useful reference). "None" means that we completely delete the old translations.	
	
	Run the following  (see  C:\AT\Zukero\ATCS\src\com\gpl\rpg\atcontentstudio\model\tools\i18n\PotComparator.java)
		import com.gpl.rpg.atcontentstudio.model.Workspace;
		import com.gpl.rpg.atcontentstudio.model.tools.i18n.PotGenerator;
		import com.gpl.rpg.atcontentstudio.model.tools.i18n.PotComparator;
		 
		proj = Workspace.activeWorkspace.projects.get(0);
		PotGenerator.generatePotFileForProject(proj);
		comp = new PotComparator(proj);
		comp.compare();
		comp.updatePoFiles(proj);
	
	Remove .po and .pot files from  C:\AT\NutAndor\andors-trail\AndorsTrail\assets\translation
	Copy .po and .pot files from  C:\AT\ATCS\beta\ATCS\beta\altered  to  C:\AT\NutAndor\andors-trail\AndorsTrail\assets\translation

- in AndorsTrailApplication.java
	Set version number 
	Set correct boolean values in AndorsTrailApplication.java  (Everything to false)
	
- Set version number in manifest

- Create .mo files     ???recht viele Fehler wg. invalid multibyte sequence
	FOR %F in ("C:\AT\NutAndor\andors-trail\AndorsTrail\assets\translation\*.po") DO "C:\Program Files (x86)\Poedit\GettextTools\bin\msgfmt.exe" -o %~dpnF.mo %~F

- compress resources
	Restart ATCS
	Use ATCS' beanshell console to generate the compressed resources (JSON, spritesheets, tmx files). 
	(Attention: "Minify.class" must be found via classpath. For this I had to compile Minify.java and add the path in ATCS.cmd)
		Run the following  (see  C:\AT\Zukero\ATCS\src\com\gpl\rpg\atcontentstudio\model\tools\resoptimizer\ResourcesCompactor.java)
			import com.gpl.rpg.atcontentstudio.model.tools.resoptimizer.ResourcesCompactor;
			import com.gpl.rpg.atcontentstudio.model.Workspace;
			proj = Workspace.activeWorkspace.projects.get(0);
			new ResourcesCompactor(proj).compactData();

	Delete the old resources, and replace with the compressed ones
		JSON:
			set A=C:\AT\ATCS\beta\ATCS\beta\compressed\res
			set F=C:\AT\NutAndor\andors-trail\AndorsTrail\res
			del "%F%\raw\*.json"
			copy "%A%\raw\*.json" "%F%\raw\"
			echo [] > "%F%\raw\actorconditions_debug.json"
			echo [] > "%F%\raw\conversationlist_debug.json"
			echo [] > "%F%\raw\droplists_debug.json"
			echo [] > "%F%\raw\itemlist_debug.json"
			echo [] > "%F%\raw\monsterlist_debug.json"
			echo [] > "%F%\raw\questlist_debug.json"
			echo [] > "%F%\raw\itemlist_pre0610_unused.json"

		TMX:
			del "%F%\xml\*.tmx"
			copy "%A%\xml\*.tmx" "%F%\xml\"
			echo ^<?xml version="1.0" encoding="UTF-8"?^>^<map version="1.0" orientation="orthogonal" renderorder="right-down" width="18" height="18" tilewidth="32" tileheight="32" nextobjectid="18"^>^</map^> > "%F%\xml\debugmap.tmx"
 
		PNG:
		//map_dynamic_placeholders  monsters_eye4  monsters_demon1  monsters_demon2  muss bleiben!
			ren "%F%\drawable\map_dynamic_placeholders.png"  "%F%\drawable\map_dynamic_placeholders.bak"
			ren "%F%\drawable\monsters_eye4.png"             "%F%\drawable\monsters_eye4.bak"
			ren "%F%\drawable\monsters_demon1.png"           "%F%\drawable\monsters_demon1.bak"
			ren "%F%\drawable\monsters_demon2.png"           "%F%\drawable\monsters_demon2.bak"
			del "%F%\drawable\map_*.png"
			del "%F%\drawable\actorcond*.png"
			del "%F%\drawable\items*.png"
			del "%F%\drawable\monsters*.png"
			copy "%A%\drawable\*.png" "%F%\drawable\"
			ren "%F%\drawable\map_dynamic_placeholders.bak"  "%F%\drawable\map_dynamic_placeholders.png"
			ren "%F%\drawable\monsters_eye4.bak"             "%F%\drawable\monsters_eye4.png"
			ren "%F%\drawable\monsters_demon1.bak"           "%F%\drawable\monsters_demon1.png"
			ren "%F%\drawable\monsters_demon2.bak"           "%F%\drawable\monsters_demon2.png"

- Actualize Resourceloader.java

	Remove the PNG defitions:
	- Every  ACTORCONDITIONS_TILESETS
	- Every  ITEMS_TILESETS
	- Every  NPC-TILESETS  except:
		loader.prepareTileset(R.drawable.monsters_demon1, "monsters_demon1", sz1x1, sz2x2, mTileSize);
		loader.prepareTileset(R.drawable.monsters_demon2, "monsters_demon2", sz1x1, sz2x2, mTileSize);
		loader.prepareTileset(R.drawable.monsters_eye4, "monsters_eye4", sz1x1, sz1x1, mTileSize);
	- Every  MAP_TILESETS,
	
	Then enter the compresses PNG definitions:
	
		final Size sz8x8 = new Size(8, 8);
		
		loader.prepareTileset(R.drawable.map_0, "map_0", sz8x8, sz1x1, mTileSize);
		loader.prepareTileset(R.drawable.map_1, "map_1", sz8x8, sz1x1, mTileSize);
		loader.prepareTileset(R.drawable.map_2, "map_2", sz8x8, sz1x1, mTileSize);
		loader.prepareTileset(R.drawable.map_3, "map_3", sz8x8, sz1x1, mTileSize);
		loader.prepareTileset(R.drawable.map_4, "map_4", sz8x8, sz1x1, mTileSize);
		loader.prepareTileset(R.drawable.map_5, "map_5", sz8x8, sz1x1, mTileSize);
		loader.prepareTileset(R.drawable.map_6, "map_6", sz8x8, sz1x1, mTileSize);
		loader.prepareTileset(R.drawable.map_7, "map_7", sz8x8, sz1x1, mTileSize);
		loader.prepareTileset(R.drawable.map_8, "map_8", sz8x8, sz1x1, mTileSize);
		loader.prepareTileset(R.drawable.map_9, "map_9", sz8x8, sz1x1, mTileSize);
		loader.prepareTileset(R.drawable.map_10, "map_10", sz8x8, sz1x1, mTileSize);
		loader.prepareTileset(R.drawable.map_11, "map_11", sz8x8, sz1x1, mTileSize);
		loader.prepareTileset(R.drawable.map_12, "map_12", sz8x8, sz1x1, mTileSize);
		loader.prepareTileset(R.drawable.map_13, "map_13", sz8x8, sz1x1, mTileSize);
		loader.prepareTileset(R.drawable.map_14, "map_14", sz8x8, sz1x1, mTileSize);
		loader.prepareTileset(R.drawable.map_15, "map_15", sz8x8, sz1x1, mTileSize);
		loader.prepareTileset(R.drawable.map_16, "map_16", sz8x8, sz1x1, mTileSize);
		loader.prepareTileset(R.drawable.map_17, "map_17", sz8x8, sz1x1, mTileSize);
		loader.prepareTileset(R.drawable.map_18, "map_18", sz8x8, sz1x1, mTileSize);
		loader.prepareTileset(R.drawable.map_19, "map_19", sz8x8, sz1x1, mTileSize);
		loader.prepareTileset(R.drawable.map_20, "map_20", sz8x8, sz1x1, mTileSize);
		loader.prepareTileset(R.drawable.map_21, "map_21", sz8x8, sz1x1, mTileSize);
		loader.prepareTileset(R.drawable.map_22, "map_22", sz8x8, sz1x1, mTileSize);
		loader.prepareTileset(R.drawable.map_23, "map_23", sz8x8, sz1x1, mTileSize);
		loader.prepareTileset(R.drawable.map_24, "map_24", sz8x8, sz1x1, mTileSize);
		loader.prepareTileset(R.drawable.map_25, "map_25", sz8x8, sz1x1, mTileSize);
		loader.prepareTileset(R.drawable.map_26, "map_26", sz8x8, sz1x1, mTileSize);
		loader.prepareTileset(R.drawable.map_27, "map_27", sz8x8, sz1x1, mTileSize);
		loader.prepareTileset(R.drawable.map_28, "map_28", sz8x8, sz1x1, mTileSize);
		loader.prepareTileset(R.drawable.map_29, "map_29", sz8x8, sz1x1, mTileSize);
		loader.prepareTileset(R.drawable.map_30, "map_30", sz8x8, sz1x1, mTileSize);
		loader.prepareTileset(R.drawable.map_31, "map_31", sz8x8, sz1x1, mTileSize);
		loader.prepareTileset(R.drawable.map_32, "map_32", sz8x8, sz1x1, mTileSize);
		loader.prepareTileset(R.drawable.map_33, "map_33", sz8x8, sz1x1, mTileSize);
		loader.prepareTileset(R.drawable.map_34, "map_34", sz8x8, sz1x1, mTileSize);
		loader.prepareTileset(R.drawable.map_35, "map_35", sz8x8, sz1x1, mTileSize);
		loader.prepareTileset(R.drawable.map_36, "map_36", sz8x8, sz1x1, mTileSize);
		loader.prepareTileset(R.drawable.map_37, "map_37", sz8x8, sz1x1, mTileSize);
		loader.prepareTileset(R.drawable.map_38, "map_38", sz8x8, sz1x1, mTileSize);
		loader.prepareTileset(R.drawable.map_39, "map_39", sz8x8, sz1x1, mTileSize);
		loader.prepareTileset(R.drawable.map_40, "map_40", sz8x8, sz1x1, mTileSize);
		
		loader.prepareTileset(R.drawable.obj_0, "obj_0", sz8x8, sz1x1, mTileSize);
		loader.prepareTileset(R.drawable.obj_1, "obj_1", sz8x8, sz1x1, mTileSize);
		loader.prepareTileset(R.drawable.obj_2, "obj_2", sz8x8, sz1x1, mTileSize);
		loader.prepareTileset(R.drawable.obj_3, "obj_3", sz8x8, sz1x1, mTileSize);
		loader.prepareTileset(R.drawable.obj_4, "obj_4", sz8x8, sz1x1, mTileSize);
		loader.prepareTileset(R.drawable.obj_5, "obj_5", sz8x8, sz1x1, mTileSize);
		loader.prepareTileset(R.drawable.obj_6, "obj_6", sz8x8, sz1x1, mTileSize);
		loader.prepareTileset(R.drawable.obj_7, "obj_7", sz8x8, sz1x1, mTileSize);
		loader.prepareTileset(R.drawable.obj_8, "obj_8", sz8x8, sz1x1, mTileSize);
		loader.prepareTileset(R.drawable.obj_9, "obj_9", sz8x8, sz1x1, mTileSize);
		loader.prepareTileset(R.drawable.obj_10, "obj_10", sz8x8, sz1x1, mTileSize);







		
	(ResourceLoader: Alt
		loader.prepareTileset(R.drawable.actorconditions_1, "actorconditions_1", new Size(14, 8), sz1x1, mTileSize);
		loader.prepareTileset(R.drawable.actorconditions_2, "actorconditions_2", sz3x1, sz1x1, mTileSize);
		loader.prepareTileset(R.drawable.actorconditions_japozero, "actorconditions_japozero", new Size(16, 4), sz1x1, mTileSize);
		
		loader.prepareTileset(R.drawable.items_armours, "items_armours", new Size(14, 3), sz1x1, mTileSize);
		loader.prepareTileset(R.drawable.items_weapons, "items_weapons", new Size(14, 6), sz1x1, mTileSize);
		loader.prepareTileset(R.drawable.items_jewelry, "items_jewelry", new Size(14, 1), sz1x1, mTileSize);
		loader.prepareTileset(R.drawable.items_consumables, "items_consumables", new Size(14, 5), sz1x1, mTileSize);
		loader.prepareTileset(R.drawable.items_books, "items_books", new Size(11, 1), sz1x1, mTileSize);
		loader.prepareTileset(R.drawable.items_misc, "items_misc", new Size(14, 4), sz1x1, mTileSize);
		loader.prepareTileset(R.drawable.items_misc_2, "items_misc_2", sz20x12, sz1x1, mTileSize);
		loader.prepareTileset(R.drawable.items_misc_3, "items_misc_3", sz20x12, sz1x1, mTileSize);
		loader.prepareTileset(R.drawable.items_misc_4, "items_misc_4", new Size(20, 4), sz1x1, mTileSize);
		loader.prepareTileset(R.drawable.items_misc_5, "items_misc_5", new Size(9, 5), sz1x1, mTileSize);
		loader.prepareTileset(R.drawable.items_misc_6, "items_misc_6", new Size(9, 4), sz1x1, mTileSize);
		loader.prepareTileset(R.drawable.items_reterski_1, "items_reterski_1", new Size(3, 10), sz1x1, mTileSize);
		loader.prepareTileset(R.drawable.items_tometik1, "items_tometik1", new Size(6, 10), sz1x1, mTileSize);
		loader.prepareTileset(R.drawable.items_tometik2, "items_tometik2", new Size(10, 10), sz1x1, mTileSize);
		loader.prepareTileset(R.drawable.items_tometik3, "items_tometik3", new Size(8, 6), sz1x1, mTileSize);
		loader.prepareTileset(R.drawable.items_necklaces_1, "items_necklaces_1", new Size(10, 3), sz1x1, mTileSize);
		loader.prepareTileset(R.drawable.items_weapons_2, "items_weapons_2", new Size(7, 1), sz1x1, mTileSize);
		loader.prepareTileset(R.drawable.items_weapons_3, "items_weapons_3", new Size(13, 5), sz1x1, mTileSize);
		loader.prepareTileset(R.drawable.items_armours_2, "items_armours_2", sz7x1, sz1x1, mTileSize);
		loader.prepareTileset(R.drawable.items_armours_3, "items_armours_3", new Size(10, 4), sz1x1, mTileSize);
		loader.prepareTileset(R.drawable.items_rings_1, "items_rings_1", new Size(10, 3), sz1x1, mTileSize);
		loader.prepareTileset(R.drawable.items_japozero, "items_japozero", new Size(16, 37), sz1x1, mTileSize);
		loader.prepareTileset(R.drawable.items_rijackson_1, "items_rijackson_1", new Size(5, 4), sz1x1, mTileSize);

		loader.prepareTileset(R.drawable.monsters_armor1, "monsters_armor1", sz1x1, sz1x1, mTileSize);
		loader.prepareTileset(R.drawable.monsters_cyclops, "monsters_cyclops", sz1x1, sz2x3, mTileSize);
		loader.prepareTileset(R.drawable.monsters_demon1, "monsters_demon1", sz1x1, sz2x2, mTileSize);
		loader.prepareTileset(R.drawable.monsters_demon2, "monsters_demon2", sz1x1, sz2x2, mTileSize);
		loader.prepareTileset(R.drawable.monsters_dogs, "monsters_dogs", sz7x1, sz1x1, mTileSize);
		loader.prepareTileset(R.drawable.monsters_eye1, "monsters_eye1", sz1x1, sz1x1, mTileSize);
		loader.prepareTileset(R.drawable.monsters_eye2, "monsters_eye2", sz1x1, sz1x1, mTileSize);
		loader.prepareTileset(R.drawable.monsters_eye3, "monsters_eye3", sz1x1, sz1x1, mTileSize);
		loader.prepareTileset(R.drawable.monsters_eye4, "monsters_eye4", sz1x1, sz1x1, mTileSize);
		loader.prepareTileset(R.drawable.monsters_ghost1, "monsters_ghost1", sz1x1, sz1x1, mTileSize);
		loader.prepareTileset(R.drawable.monsters_hydra1, "monsters_hydra1", sz1x1, sz2x2, mTileSize);
		loader.prepareTileset(R.drawable.monsters_insects, "monsters_insects", sz6x1, sz1x1, mTileSize);
		loader.prepareTileset(R.drawable.monsters_karvis1, "monsters_karvis1", sz2x1, sz1x1, mTileSize);
		loader.prepareTileset(R.drawable.monsters_karvis2, "monsters_karvis2", new Size(9, 1), sz1x1, mTileSize);
		loader.prepareTileset(R.drawable.monsters_ld1, "monsters_ld1", new Size(20, 12), sz1x1, mTileSize);
		loader.prepareTileset(R.drawable.monsters_ld2, "monsters_ld2", new Size(20, 12), sz1x1, mTileSize);
		loader.prepareTileset(R.drawable.monsters_liches, "monsters_liches", new Size(4, 1), sz1x1, mTileSize);
		loader.prepareTileset(R.drawable.monsters_mage, "monsters_mage", sz1x1, sz1x1, mTileSize);
		loader.prepareTileset(R.drawable.monsters_mage2, "monsters_mage2", sz1x1, sz1x1, mTileSize);
		loader.prepareTileset(R.drawable.monsters_man1, "monsters_man1", sz1x1, sz1x1, mTileSize);
		loader.prepareTileset(R.drawable.monsters_men, "monsters_men", new Size(9, 1), sz1x1, mTileSize);
		loader.prepareTileset(R.drawable.monsters_men2, "monsters_men2", new Size(10, 1), sz1x1, mTileSize);
		loader.prepareTileset(R.drawable.monsters_misc, "monsters_misc", new Size(12, 1), sz1x1, mTileSize);
		loader.prepareTileset(R.drawable.monsters_rats, "monsters_rats", new Size(5, 1), sz1x1, mTileSize);
		loader.prepareTileset(R.drawable.monsters_redshrike1, "monsters_redshrike1", sz7x1, sz1x1, mTileSize);
		loader.prepareTileset(R.drawable.monsters_rltiles1, "monsters_rltiles1", new Size(20, 8), sz1x1, mTileSize);
		loader.prepareTileset(R.drawable.monsters_rltiles2, "monsters_rltiles2", new Size(20, 9), sz1x1, mTileSize);
		loader.prepareTileset(R.drawable.monsters_rltiles3, "monsters_rltiles3", new Size(10, 3), sz1x1, mTileSize);
		loader.prepareTileset(R.drawable.monsters_rltiles4, "monsters_rltiles4", new Size(12, 4), sz1x1, mTileSize);
		loader.prepareTileset(R.drawable.monsters_rogue1, "monsters_rogue1", sz1x1, sz1x1, mTileSize);
		loader.prepareTileset(R.drawable.monsters_skeleton1, "monsters_skeleton1", sz1x1, sz1x1, mTileSize);
		loader.prepareTileset(R.drawable.monsters_skeleton2, "monsters_skeleton2", sz1x1, sz1x1, mTileSize);
		loader.prepareTileset(R.drawable.monsters_snakes, "monsters_snakes", sz6x1, sz1x1, mTileSize);
		loader.prepareTileset(R.drawable.monsters_tometik1, "monsters_tometik1", new Size(10, 9), sz1x1, mTileSize);
		loader.prepareTileset(R.drawable.monsters_tometik2, "monsters_tometik2", new Size(8, 10), sz1x1, mTileSize);
		loader.prepareTileset(R.drawable.monsters_tometik3, "monsters_tometik3", new Size(6, 13), sz1x1, mTileSize);
		loader.prepareTileset(R.drawable.monsters_tometik4, "monsters_tometik4", new Size(6, 13), sz1x1, mTileSize);
		loader.prepareTileset(R.drawable.monsters_tometik5, "monsters_tometik5", new Size(6, 16), sz1x1, mTileSize);
		loader.prepareTileset(R.drawable.monsters_tometik6, "monsters_tometik6", new Size(7, 6), sz1x1, mTileSize);
		loader.prepareTileset(R.drawable.monsters_tometik7, "monsters_tometik7", new Size(8, 11), sz1x1, mTileSize);
		loader.prepareTileset(R.drawable.monsters_tometik8, "monsters_tometik8", new Size(7, 9), sz1x1, mTileSize);
		loader.prepareTileset(R.drawable.monsters_tometik9, "monsters_tometik9", new Size(8, 8), sz1x1, mTileSize);
		loader.prepareTileset(R.drawable.monsters_tometik10, "monsters_tometik10", new Size(6, 13), sz1x1, mTileSize);
		loader.prepareTileset(R.drawable.monsters_wraiths, "monsters_wraiths", sz3x1, sz1x1, mTileSize);
		loader.prepareTileset(R.drawable.monsters_zombie1, "monsters_zombie1", sz1x1, sz1x1, mTileSize);
		loader.prepareTileset(R.drawable.monsters_zombie2, "monsters_zombie2", sz1x1, sz1x1, mTileSize);
		loader.prepareTileset(R.drawable.monsters_guynmart, "monsters_guynmart", new Size(8, 2), sz1x1, mTileSize);
		loader.prepareTileset(R.drawable.monsters_maksiu1, "monsters_maksiu1", new Size(4, 4), sz1x1, mTileSize);		

		loader.prepareTileset(R.drawable.map_bed_1, "map_bed_1", mapTileSize, sz1x1, mTileSize);
		loader.prepareTileset(R.drawable.map_border_1, "map_border_1", mapTileSize, sz1x1, mTileSize);
		loader.prepareTileset(R.drawable.map_bridge_1, "map_bridge_1", mapTileSize, sz1x1, mTileSize);
		loader.prepareTileset(R.drawable.map_bridge_2, "map_bridge_2", mapTileSize, sz1x1, mTileSize);
		loader.prepareTileset(R.drawable.map_broken_1, "map_broken_1", mapTileSize, sz1x1, mTileSize);
		loader.prepareTileset(R.drawable.map_cavewall_1, "map_cavewall_1", new Size(18, 6), sz1x1, mTileSize);
		loader.prepareTileset(R.drawable.map_cavewall_2, "map_cavewall_2", new Size(18, 6), sz1x1, mTileSize);
		loader.prepareTileset(R.drawable.map_cavewall_3, "map_cavewall_3", new Size(18, 6), sz1x1, mTileSize);
		loader.prepareTileset(R.drawable.map_cavewall_4, "map_cavewall_4", new Size(18, 6), sz1x1, mTileSize);
		loader.prepareTileset(R.drawable.map_chair_table_1, "map_chair_table_1", mapTileSize, sz1x1, mTileSize);
		loader.prepareTileset(R.drawable.map_chair_table_2, "map_chair_table_2", mapTileSize, sz1x1, mTileSize);
		loader.prepareTileset(R.drawable.map_crate_1, "map_crate_1", mapTileSize, sz1x1, mTileSize);
		loader.prepareTileset(R.drawable.map_cupboard_1, "map_cupboard_1", mapTileSize, sz1x1, mTileSize);
		loader.prepareTileset(R.drawable.map_curtain_1, "map_curtain_1", mapTileSize, sz1x1, mTileSize);
		loader.prepareTileset(R.drawable.map_entrance_1, "map_entrance_1", mapTileSize, sz1x1, mTileSize);
		loader.prepareTileset(R.drawable.map_entrance_2, "map_entrance_2", mapTileSize, sz1x1, mTileSize);
		loader.prepareTileset(R.drawable.map_fence_1, "map_fence_1", mapTileSize, sz1x1, mTileSize);
		loader.prepareTileset(R.drawable.map_fence_2, "map_fence_2", mapTileSize, sz1x1, mTileSize);
		loader.prepareTileset(R.drawable.map_fence_3, "map_fence_3", mapTileSize, sz1x1, mTileSize);
		loader.prepareTileset(R.drawable.map_fence_4, "map_fence_4", mapTileSize, sz1x1, mTileSize);
		loader.prepareTileset(R.drawable.map_ground_1, "map_ground_1", mapTileSize, sz1x1, mTileSize);
		loader.prepareTileset(R.drawable.map_ground_2, "map_ground_2", mapTileSize, sz1x1, mTileSize);
		loader.prepareTileset(R.drawable.map_ground_3, "map_ground_3", mapTileSize, sz1x1, mTileSize);
		loader.prepareTileset(R.drawable.map_ground_4, "map_ground_4", mapTileSize, sz1x1, mTileSize);
		loader.prepareTileset(R.drawable.map_ground_5, "map_ground_5", mapTileSize, sz1x1, mTileSize);
		loader.prepareTileset(R.drawable.map_ground_6, "map_ground_6", mapTileSize, sz1x1, mTileSize);
		loader.prepareTileset(R.drawable.map_ground_7, "map_ground_7", mapTileSize, sz1x1, mTileSize);
		loader.prepareTileset(R.drawable.map_ground_8, "map_ground_8", mapTileSize, sz1x1, mTileSize);
		loader.prepareTileset(R.drawable.map_house_1, "map_house_1", mapTileSize, sz1x1, mTileSize);
		loader.prepareTileset(R.drawable.map_house_2, "map_house_2", mapTileSize, sz1x1, mTileSize);
		loader.prepareTileset(R.drawable.map_indoor_1, "map_indoor_1", mapTileSize, sz1x1, mTileSize);
		loader.prepareTileset(R.drawable.map_indoor_2, "map_indoor_2", mapTileSize, sz1x1, mTileSize);
		loader.prepareTileset(R.drawable.map_kitchen_1, "map_kitchen_1", mapTileSize, sz1x1, mTileSize);
		loader.prepareTileset(R.drawable.map_outdoor_1, "map_outdoor_1", mapTileSize, sz1x1, mTileSize);
		loader.prepareTileset(R.drawable.map_pillar_1, "map_pillar_1", mapTileSize, sz1x1, mTileSize);
		loader.prepareTileset(R.drawable.map_pillar_2, "map_pillar_2", mapTileSize, sz1x1, mTileSize);
		loader.prepareTileset(R.drawable.map_plant_1, "map_plant_1", mapTileSize, sz1x1, mTileSize);
		loader.prepareTileset(R.drawable.map_plant_2, "map_plant_2", mapTileSize, sz1x1, mTileSize);
		loader.prepareTileset(R.drawable.map_rock_1, "map_rock_1", mapTileSize, sz1x1, mTileSize);
		loader.prepareTileset(R.drawable.map_rock_2, "map_rock_2", mapTileSize, sz1x1, mTileSize);
		loader.prepareTileset(R.drawable.map_roof_1, "map_roof_1", mapTileSize, sz1x1, mTileSize);
		loader.prepareTileset(R.drawable.map_roof_2, "map_roof_2", mapTileSize, sz1x1, mTileSize);
		loader.prepareTileset(R.drawable.map_roof_3, "map_roof_3", mapTileSize, sz1x1, mTileSize);
		loader.prepareTileset(R.drawable.map_shop_1, "map_shop_1", mapTileSize, sz1x1, mTileSize);
		loader.prepareTileset(R.drawable.map_sign_ladder_1, "map_sign_ladder_1", mapTileSize, sz1x1, mTileSize);
		loader.prepareTileset(R.drawable.map_table_1, "map_table_1", mapTileSize, sz1x1, mTileSize);
		loader.prepareTileset(R.drawable.map_trail_1, "map_trail_1", mapTileSize, sz1x1, mTileSize);
		loader.prepareTileset(R.drawable.map_transition_1, "map_transition_1", mapTileSize, sz1x1, mTileSize);
		loader.prepareTileset(R.drawable.map_transition_2, "map_transition_2", mapTileSize, sz1x1, mTileSize);
		loader.prepareTileset(R.drawable.map_transition_3, "map_transition_3", mapTileSize, sz1x1, mTileSize);
		loader.prepareTileset(R.drawable.map_transition_4, "map_transition_4", mapTileSize, sz1x1, mTileSize);
		loader.prepareTileset(R.drawable.map_transition_5, "map_transition_5", mapTileSize, sz1x1, mTileSize);
		loader.prepareTileset(R.drawable.map_tree_1, "map_tree_1", mapTileSize, sz1x1, mTileSize);
		loader.prepareTileset(R.drawable.map_tree_2, "map_tree_2", mapTileSize, sz1x1, mTileSize);
		loader.prepareTileset(R.drawable.map_wall_1, "map_wall_1", mapTileSize, sz1x1, mTileSize);
		loader.prepareTileset(R.drawable.map_wall_2, "map_wall_2", new Size(15, 8), sz1x1, mTileSize);
		loader.prepareTileset(R.drawable.map_wall_3, "map_wall_3", new Size(15, 8), sz1x1, mTileSize);
		loader.prepareTileset(R.drawable.map_wall_4, "map_wall_4", new Size(15, 8), sz1x1, mTileSize);
		loader.prepareTileset(R.drawable.map_window_1, "map_window_1", mapTileSize, sz1x1, mTileSize);
		loader.prepareTileset(R.drawable.map_window_2, "map_window_2", mapTileSize, sz1x1, mTileSize);
		loader.prepareTileset(R.drawable.map_guynmart, "map_guynmart", mapTileSize, sz1x1, mTileSize);
	)	
		


